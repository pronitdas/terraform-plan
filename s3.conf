proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=nginx_cache:100M max_size=1G inactive=40d;
log_subrequest on;
# front facing virtual host for caching
server {
    listen 80;
    server_name proxy_server;
    location /img/ {
        proxy_pass http://127.0.0.1:10177;
        proxy_cache nginx_cache;
        proxy_cache_key "$proxy_host$uri$is_args$args";
# proxy_cache_lock on; # Allow only one request
        proxy_cache_valid 30d;
# Cache valid images for 30 days.
        expires 30d;
    }
    location /s3/ {
        resolver 8.8.8.8;
        # Use Google for DNS.
        resolver_timeout 10s;
        #set $backend ‘dev-csa.s3.us-east-2.amazonaws.com/’;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_pass_request_body off;
        # Not needed by AWS.
        proxy_pass_request_headers off;
        # Clean up the headers going to and from S3.
        proxy_hide_header "x-amz-id-2";
        proxy_hide_header "x-amz-request-id";
        proxy_hide_header "x-amz-storage-class";
        proxy_hide_header "Set-Cookie";
        proxy_ignore_headers "Set-Cookie";
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        rewrite ^ $request_uri;
        rewrite ^/s3/(.*) $1 break;
        proxy_pass http://dev-csa.s3.us-east-2.amazonaws.com/$uri;
        error_page 415 =404;
    }
}
# resizing server
server {
    listen 10177;
    server_name image_resize_server;
    location ~ ^/img/([0-9]+)x([0-9]+)/(.+) {
        error_page 415 =404 /empty.gif;
        image_filter_buffer 20M;
        image_filter_jpeg_quality 75;
# Desired JPG quality
        image_filter_interlace on;
# For progressive JPG
        image_filter resize $1 $2;
        rewrite ^ $request_uri;
        rewrite ^/img/([0-9]+)x([0-9]+)/(.*) $3 break;
        return 400;
        proxy_pass http://127.0.0.1:10178/img/$uri;
    }
}
# back-end virtual host for retrieving file from AWS
server {
    listen 10178;
    server_name second_proxy_server;
    resolver 8.8.8.8;
# Use Google for DNS.
    resolver_timeout 10s;
#set $backend ‘dev-csa.s3.us-east-2.amazonaws.com/’;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass_request_body off;
# Not needed by AWS.
    proxy_pass_request_headers off;
# Clean up the headers going to and from S3.
    proxy_hide_header "x-amz-id-2";
    proxy_hide_header "x-amz-request-id";
    proxy_hide_header "x-amz-storage-class";
    proxy_hide_header "Set-Cookie";
    proxy_ignore_headers "Set-Cookie";
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
    location ~ ^/img/(.+) {
        rewrite ^ $request_uri;
        rewrite ^/img/(.*) $1 break;
        return 400;
        proxy_pass http://dev-csa.s3.us-east-2.amazonaws.com/$uri;
        error_page 415 =404 /empty.gif;
        proxy_cache nginx_cache;
        proxy_cache_key "temp_$proxy_host$uri$is_args$args";
# proxy_cache_lock on; # Allow only one request
        proxy_cache_valid 60s;
        expires 60s;
    }
}
